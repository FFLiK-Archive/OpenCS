def IS_TRI(a, b, c):
    if a + b > c and a + c > b and b + c > a:
        return 1
    else:
        return 0

test_table = (
	(1, 1, 1),
	(2, 3, 4),
	(3, 4, 5),
	(6, 8, 10),
	(7, 7, 14),
	(5, 12, 13),
	(3, 5, 8),
	(9, 10, 17),
	(7, 24, 25),
	(8, 15, 17),
	(1, 2, 3),
	(2, 2, 5),
	(4, 4, 4),
	(5, 5, 12),
	(7, 8, 15),
	(7, 10, 15),
	(9, 12, 15),
	(6, 8, 13),
	(12, 16, 20),
	(3, 4, 6),
	(10, 11, 20),
	(15, 15, 30),
	(3, 6, 8),
	(5, 7, 9),
	(6, 10, 15),
	(12, 13, 25),
	(8, 10, 15),
	(4, 5, 9),
	(7, 10, 12),
	(1, 3, 3),
	(2, 4, 5),
	(5, 10, 12),
	(8, 10, 13),
	(7, 9, 11),
	(9, 12, 16),
	(7, 24, 25),
	(10, 12, 18),
	(3, 5, 7),
	(2, 7, 8),
	(6, 8, 16),
	(6, 10, 13),
	(11, 12, 20),
	(9, 12, 15),
	(4, 6, 8),
	(7, 15, 20)
)

chk = 0
for i in test_table:
    chk += isTriangle(i[0], i[1], i[2]) == IS_TRI(i[0], i[1], i[2])

if chk == len(test_table):
    print("Success!! (", chk, "/", len(test_table),")")
else:
    print("Failed (", chk, "/", len(test_table),")")