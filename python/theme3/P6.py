def TRI(a,b,c):
    l = sorted([a,b,c])
    if l[0]**2 + l[1]**2 == l[2]**2:
        return "Right Triange"
    elif l[0]**2 + l[1]**2 > l[2]**2:
        return "Acute Triangle"
    return "Obtuse Triangle"

test_table = (
    (3, 4, 5),          
	(5, 12, 13),
	(7, 24, 25),
	(8, 15, 17),
	(9, 40, 41),
	(11, 60, 61),
	(12, 35, 37),
	(20, 21, 29),
	(5, 7, 9),
	(7, 15, 19),
	(9, 10, 17),
	(11, 20, 21),
	(13, 84, 85),
	(16, 63, 65),
	(36, 77, 85),
	(40, 75, 85),
	(65, 72, 97),
	(8, 8, 12),
	(10, 10, 14),
	(12, 12, 16),
	(15, 15, 20),
	(17, 17, 24),
	(21, 21, 28),
	(24, 24, 32),
	(28, 28, 37),
	(32, 32, 43),
	(36, 36, 48),
	(40, 40, 53),
	(48, 48, 65),
	(56, 56, 75),
	(65, 65, 88),
	(72, 72, 97),
	(80, 80, 109),
	(96, 96, 130),
	(35, 37, 42),
	(37, 53, 62),
	(42, 56, 70),
	(49, 120, 121),
	(52, 165, 173),
	(60, 91, 109),
	(85, 132, 157),
	(20, 21, 27),
	(6, 8, 11),
	(12, 16, 22),
	(24, 32, 44)
)

chk = 0
for i in test_table:
    chk += triangle(i[0], i[1], i[2]) == TRI(i[0], i[1], i[2])

if chk == len(test_table):
    print("Success!! (", chk, "/", len(test_table),")")
else:
    print("Failed (", chk, "/", len(test_table),")")